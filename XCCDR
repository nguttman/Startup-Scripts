# chkconfig: 345 93 7
# description: CDR Recorder script
#!/bin/sh
# CDR Recorder start/stop script.

StartupScript="/etc/init.d/XCCDR"
basedir="/XC/CDR-recorder/production"
SERVER_ID=16122
INSTANCENAME=XCCDR
JMXPORT=1099
JOLOKIAPROPS="$basedir/config/jolokia.properties"

#JavaExe="/XC/JAVA/production/bin/java -Duser.timezone=UTC -Dserver.id=$SERVER_ID -Dservice.name=$INSTANCENAME -Dcom.sun.management.jmxremote -XX:+HeapDumpOnOutOfMemoryError -Xms30m -Xmx60m -XX:MaxPermSize=25m -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -javaagent:$basedir/lib/jolokia-jvm-1.1.1-agent.jar=config=$JOLOKIAPROPS -jar"


JavaExe="/XC/JAVA/production/bin/java -Duser.timezone=UTC -Dserver.id=$SERVER_ID -Dservice.name=$INSTANCENAME -Dcom.sun.management.jmxremote -XX:+HeapDumpOnOutOfMemoryError -Xms30m -Xmx60m -XX:MaxPermSize=25m -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -javaagent:$basedir/lib/jolokia-jvm-1.2.1-agent.jar=config=$JOLOKIAPROPS -jar"
JavaProg="$basedir/cdr-recorder.jar"
PIDFILE=/var/run/XCCDR.pid
VERSION="CDR Recorder v2.1.6"

if [ ! -d /var/run ]
then
        echo "ERROR! directory: /var/run does not exist (location of pid file). Please create and rerun"
        exit 99
fi


mode=$1    # start or stop
 cd $basedir

case "$mode" in
	'start')
	# Start daemon
	if test -e $JavaProg
	then
		if [ -f $PIDFILE ]
		then
			pid=`cat $PIDFILE`
			x=`ps -p $pid`
			psrc=$?
			if [ $psrc = 0 ]
			then
				echo "ERROR! $VERSION process already running - pid:$pid"
                		exit 99
        		else
                		echo "$PIDFILE is present, but process is not running. pid file will be updated when process starts."
			fi
    		else
        		x=`ps -ef | grep $JavaProg | grep -v grep`
        		if [ x"$x" != x ]
        		then
                		echo $x
                		echo "$VERSION already running - without a pid file"
                		exit 98
			else
				echo "Starting CDR Recorder"
			fi
       		fi
		cd $basedir >/dev/null 2>&1
#                nohup $JavaExe $JavaProg & >/dev/null 2>&1 &
                nohup $JavaExe $JavaProg >> $basedir/nohup.out &
		sleep 1
                pid=`ps -ef | grep $JavaProg | grep -v grep | awk {'print $2'}`
                echo "running $VERSION with pid:<${pid}>"
                echo $pid > $PIDFILE
	else
		echo "Can't execute $JavaExe $JavaProg " # from dir $basedir"
	fi
    	;;

	'stop')
    	# Stop daemon
	if [ -f $PIDFILE ]
	then
		pid=`cat $PIDFILE`
		x=`ps -p $pid`
		psrc=$?
		if [ $psrc = 0 ]
		then
			echo "Killing the CDR Recorder"
			kill -9 $pid
			rm -rf $PIDFILE
		else
			echo "pid: $pid not running - Nothing to kill"
			rm -rf $PIDFILE
		fi
	else
		echo "$PIDFILE not found  - CDR Recorder does not appear to be running"
	fi
	;;

	'status')
    	# check status
	       if [ -f $PIDFILE ]
        then
                pid=`cat $PIDFILE`
                x=`ps -p $pid`
                psrc=$?
                if [ $psrc = 0 ]
                then
                        echo "The CDR Recorder $JavaProg is running"
                else
                        echo "The CDR Recorder $JavaProg pid: $pid not running - PID file should have been removed."
                fi
        else
                echo "The CDR Recorder $JavaProg is not running"
        fi
    	;;
	'restart')
		echo "Restarting the CDR Recorder"
		$StartupScript stop
		sleep 2
		$StartupScript start
	;;

  *)
    # usage
    echo "Usage: $0 start|stop|restart|status"
    exit 1
    ;;
esac
